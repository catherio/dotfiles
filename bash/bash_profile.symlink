##### CANNED CONFIGS #####

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# pretty boring prompt:
# PS1='\u@\h:\w$ '

# with colors prompt:
PS1='\[\033[00m\]\[\033[01;35m\]\w\[\033[00m\]$ '

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

##### PERSONAL CONFIGS #####

export LD_LIBRARY_PATH=''

add_to_path() {
    [[ ":$PATH:" != *":${@}:"* ]] && export PATH="${@}:${PATH}" ;
}
add_to_ld_library_path() {
    [[ ":$LD_LIBRARY_PATH:" != *":${@}:"* ]] && export LD_LIBRARY_PATH="${@}:${LD_LIBRARY_PATH}" ;
}

platform='linux'  # this is a really really minimal way of detecting OS
unamestr=$(uname)
if [[ "$unamestr" == 'Darwin' ]]; then
   platform='osx'
fi

# Where is brew
eval $(/opt/homebrew/bin/brew shellenv)

# brew told me to put this here
if [[ $platform == 'osx' ]]; then
    if [ -f $(brew --prefix)/etc/bash_completion ]; then
        . $(brew --prefix)/etc/bash_completion
    fi
fi

# come on let's get these colors right
if [[ $platform == 'osx' ]]; then
   export CLICOLOR=1
   export LSCOLORS=ExFxBxDxCxegedabagacad
   export LS_COLORS=ExFxBxDxCxegedabagacad
   alias ls='ls -GFh'
else
    if [ -x /usr/bin/dircolors ]; then
        test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	    alias ls='ls --color=auto'
    fi
fi

alias grep='grep --color=auto'

# conda sometimes struggles here though. try this.
unset _PYTHON_SYSCONFIGDATA_NAME
unset _PYTHON_SYSCONFIGDATA_NAME_USED


# where's tensorflow? python3 edition
# use the "virtualenv" section of the install guide at https://www.tensorflow.org/versions/r0.11/get_started/os_setup.html
# Mac OS X, CPU only, Python 3.4 or 3.5:
# export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.11.0-py3-none-any.whl

# sometimes I want to strip protocol and port
# ippart tcp://192.168.99.100:2376 -> 192.168.99.100
alias ippart="sed 's/^[^0-9]*\([a-z0-9\.]*\):[0-9]*$/\1/' <<<"


# directories I browse to a lot
alias dots='cd ~/.dotfiles'

# git shortcuts for great victory
alias g='git'
alias gl='git log'; alias glog='git log'; alias gitl='git log'
alias gb='git branch'; alias gbr='git branch'; alias gitb='git branch';
alias gc='git commit'; alias gitc='git commit'
alias gcm='git commit -m'; alias gitcm='git commit -m'
alias gcam='git commit -am'; alias gitcam='git commit -am'
alias gco='git checkout'; alias gitco='git checkout'
alias gs='git status'; alias gst='git status'; alias gits='git status'
alias ga='git add'; alias gadd='git add'; alias gita='git add'
alias gd='git diff'; alias gdiff='git diff'; alias gitd='git diff'
alias gdc='git diff --cached'; alias 'gitdc'='git diff --cached'
alias gr='git rebase'; alias gitr='git rebase'
alias gri='git rebase --interactive'; alias gitri='git rebase --interactive'
alias gra='git rebase --abort'; alias gitra='git rebase --abort'
alias gpr='git pull --rebase'; alias gitpr='git pull --rebase'
alias gf='git fetch'; alias gitf='git fetch'; alias gfetch='git fetch'
alias gp='git push'; alias gpush='git push'; alias gitp='git push'
alias gma='git merge --abort'; alias gitma='git merge --abort'
alias gm='git merge'; alias gitm='git merge'; alias gmerge='git merge'
alias gsh='git stash'; alias gitsh='git stash'; alias gstash='git stash'
alias grm='git rm'; alias gitrm='git rm';
alias greset='git reset'; alias gres='git reset'; alias gitres='git reset';
alias grt='git reset'; alias gitrt='git reset';
alias gpu='git push --set-upstream origin $(git name-rev HEAD --name-only)'

graus () {
      git remote add upstream ${@}
      git remote -v
}
alias gfu='git fetch upstream'

if [[ $platform == 'osx' ]]; then
    alias sb='source ~/.bash_profile'
else
	alias sb='source ~/.bashrc'
fi

alias ipy='ipython'
alias tma='tmux attach'
alias jn='jupyter notebook'

db="--pdb --pdbcls=IPython.terminal.debugger:Pdb"  # pytest $db

if [ -d "/Users/catherio" ] ; then
   # go path things
   export GOPATH='/Users/catherio/go'
   add_to_path $GOPATH/bin

   # pychecker
   add_to_path /Users/catherio/.dotfiles/python
fi

# Finding stuff
fname () { find . -name *$1*; }

# Sharing bash history
export HISTCONTROL=ignoredups:erasedups
# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend
# After each command, append to the history file and reread it
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"

# OSX has emacs 22 by default and I want emacs 25
# if [[ $platform == 'osx' ]]; then
#   alias emacs22='/usr/bin/emacs'
#   alias emacs='~/.brew/Cellar/emacs/25.3/bin/emacs'
# fi

# Using emacsclient more often would be great
#export ALTERNATE_EDITOR=emacs EDITOR=emacsclient VISUAL=emacsclient
#alias ec='emacsclient'
#alias emc='emacsclient'
#alias emacsc='emacsclient'

export ALTERNATE_EDITOR=""
export EDITOR="emacsclient -t"                  # $EDITOR opens in terminal
export VISUAL="emacsclient -c -a emacs"         # $VISUAL opens in GUI mode
alias ec='emacsclient --create-frame --alternate-editor=""'

# no more ag ipynb
alias ag='ag --ignore *.ipynb'

# Timestamps are useful
alias timestamp="date +%Y-%m-%d_%H-%M-%S"

# tmux
alias t='tmux -CC attach || tmux -CC'

# added by Anaconda3 4.2.0 installer
export PATH="/Users/catherio/anaconda/bin:$PATH"

# IDK man
export PYTHONDONTWRITEBYTECODE=1

# fzf?
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
export FZF_CTRL_T_OPTS="--preview 'bat --style=numbers --color=always --line-range :500 {}' --height 40% --layout reverse --info inline"

# stop warning me
export BASH_SILENCE_DEPRECATION_WARNING=1
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# install command fixer
eval "$(thefuck --alias)"
alias oops="fuck"

# kubectl
alias kc='kubectl'

# ssh agent restarting command, I keep forgetting what it is
alias sshagent="eval '$(ssh-agent -s)'"


# github command line
alias issues="gh issue list | fzf | awk '{print $1}' | xargs gh issue view --web"

# commonly used
alias coco="coo colab"
alias cococ="coo colab catherio-dev"
alias ctc="coo tmux catherio-dev"
alias cda="cd ~/code/anthropic"
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

