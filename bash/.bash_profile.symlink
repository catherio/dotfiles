##### CANNED CONFIGS #####

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# pretty boring prompt:
PS1='\u@\h:\w$ '

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

##### PERSONAL CONFIGS #####
# brew told me to put this here
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi

# come on let's get these colors right
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export LS_COLORS=ExFxBxDxCxegedabagacad
alias ls='ls -GFh'

# nicolashery's mac-dev-setup suggested that I get the system python, so ok:
PATH=/usr/local/share/python:$PATH
export PATH

# virtualenvwrapper
export WORKON_HOME=~/venvs
source /usr/local/bin/virtualenvwrapper.sh

# added automatically
[[ -s ~/.openai/bashrc ]] && source ~/.openai/bashrc

# set up Atlas key but don't post it on github
source ~/.atlas.key

# docify
source ~/.dotfiles/docify.sh

# where's tensorflow? python3 edition
# use the "virtualenv" section of the install guide at https://www.tensorflow.org/versions/r0.11/get_started/os_setup.html
# Mac OS X, CPU only, Python 3.4 or 3.5:
export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.11.0-py3-none-any.whl

# sometimes I want to strip protocol and port
# ippart tcp://192.168.99.100:2376 -> 192.168.99.100
alias ippart="sed 's/^[^0-9]*\([a-z0-9\.]*\):[0-9]*$/\1/' <<<"

# added by Anaconda3 4.2.0 installer
export PATH="/Users/catherio/anaconda3/bin:$PATH"

# Use python3 anaconda virtualenv called 'ai3'
# or the one with tensorflow 1.0 called 'tf1'
source activate tf1

# directories I browse to a lot
alias cdf='cd ~/openai/universe-envs/flashgames/'
alias cdc='cd ~/openai/universe-envs/controlplane/'
alias cdl='cd ~/openai/universe-envs/allocator/'
alias cdu='cd ~/openai/universe/'
alias cdd='cd ~/openai/gym-demonstration/'
alias cdg='cd ~/openai/gym/'
alias cda='cd ~/openai/vnc-agents/'
alias cdb='cd ~/openai/docker-buildtool/'
alias cdr='cd ~/openai/resource-accounting/'
alias cdk='cd ~/openai/kubernetes-ec2-autoscaler/'
alias cds='cd ~/openai/scoreboard-gym/'
alias cdos='cd ~/openai/openai-schedule/'
alias cdm='cd ~/openai/openai-benchmark/'
alias cdv='cd ~/openai/go-vncdriver'
alias cdo='cd ~/openai/gym-ocean'
alias cdrl='cd ~/openai/rl'
alias dots='cd ~/.dotfiles'

# git shortcuts for great victory
alias g='git'
alias gl='git log'; alias glog='git log'; alias gitl='git log'
alias gb='git branch'; alias gbr='git branch'; alias gitb='git branch';
alias gc='git commit'; alias gitc='git commit'
alias gcm='git commit -m'; alias gitcm='git commit -m'
alias gcam='git commit -am'; alias gitcam='git commit -am'
alias gco='git checkout'; alias gitco='git checkout'
alias gs='git status'; alias gst='git status'; alias gits='git status'
alias ga='git add'; alias gadd='git add'; alias gita='git add'
alias gd='git diff'; alias gdiff='git diff'; alias gitd='git diff'
alias gdc='git diff --cached'; alias 'gitdc'='git diff --cached'
alias gr='git rebase'; alias gitr='git rebase'
alias gri='git rebase --interactive'; alias gitri='git rebase --interactive'
alias gra='git rebase --abort'; alias gitra='git rebase --abort'
alias gpr='git pull --rebase'; alias gitpr='git pull --rebase'
alias gf='git fetch'; alias gitf='git fetch'; alias gfetch='git fetch'
alias gp='git push'; alias gpush='git push'; alias gitp='git push'
alias gma='git merge --abort'; alias gitma='git merge --abort'
alias gm='git merge'; alias gitm='git merge'; alias gmerge='git merge'
alias gsh='git stash'; alias gitsh='git stash'; alias gstash='git stash'
alias grm='git rm'; alias gitrm='git rm';
alias greset='git reset'; alias gres='git reset'; alias gitres='git reset';
alias grt='git reset'; alias gitrt='git reset';
alias gpu='git push --set-upstream origin $(git name-rev HEAD --name-only)'

# more shorcuts
alias k='kubectl'
alias kc='kubectl config';
alias kcurr='kubectl config current-context'
alias ksci='kubectl config use-context sci';
alias kdev='kubectl config use-context dev';
alias kg='kubectl get';
alias kgp='kubectl get pods'; alias kgpow='kubectl get pods -o wide'; alias kgpoy='kubectl get pods -o yaml'
alias kgn='kubectl get node'; alias kgnow='kubectl get node -o wide'; alias kgnoy='kubectl get nodes -o yaml'
alias kgj='kubectl get job'; alias kgjow='kubectl get job -o wide'; alias kgjoy='kubectl get job -o yaml'
alias kdel='kubectl delete'
alias kdelp='kubectl delete pod'; alias kdelj='kubectl delete job'
alias kd='kubectl describe';
alias kdp='kubectl describe pod'
alias kdn='kubectl describe node'
alias kl='kubectl logs -f'; alias kgl='kubectl logs -f'; alias klf='kubectl logs -f'
export na="--namespace=alloc"
export nd="--namespace=damodei"
export nt="--namespace=tools"
export ns="--namespace=system"
export n="--namespace"
export nj="--namespace=jgray"

alias sb='source ~/.bash_profile'
alias tf1='source activate tf1'
alias ai3='source activate ai3'
alias ipy='ipython'
alias d='docker'
alias dbt='docker-buildtool'
alias dbtv='docker-buildtool version'
alias dp='docker ps'
alias dps='docker ps'
alias dpq='docker ps -q'
alias gitver='/Users/catherio/openai/docker-buildtool/bin/git-version'
alias gv='/Users/catherio/openai/docker-buildtool/bin/git-version'
alias whereami='docker-buildtool version -f /Users/catherio/openai/vnc-agents/Dockerfile'
alias dkill='docker kill $(docker ps -q)'
alias mntefs='sudo mount -t nfs -o intr,tcp,port=2049,nfsvers=4 -v kubernetes-efs-mount.sci.openai.org:/ /mnt/efs'
alias tma='tmux attach'

# no idea if this is helpful
java()
{
    env DYLD_LIBRARY_PATH= java "$@"
}

# something bizarre
alias kubectl='/usr/local/bin/kubectl'

# go path things
export PATH=$PATH:$GOPATH/bin

# pychecker
export PATH=$PATH:/Users/catherio/.dotfiles/python/

# gym benchmark keys
source ~/.openai/gym-keys.sh

# datadog
export DATADOG_API_KEY=$(cat /mnt/efs/catherio/dd_ra_api_key.txt)
export DATADOG_APP_KEY=$(cat /mnt/efs/catherio/dd_ra_app_key.txt)

# jupyter
alias jn='jupyter notebook'

# terraform versions
if [[ -f /usr/local/share/chtf/chtf.sh ]]; then
    source "/usr/local/share/chtf/chtf.sh"
fi
# brew cask install terraform-0.8.7
# chtf 0.8.7

# CPAN wanted these when installing tagtime
PATH="/Users/catherio/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/Users/catherio/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/catherio/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/catherio/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/catherio/perl5"; export PERL_MM_OPT;

# Making a new python file from template is useful
alias mkpy='cp -n -v ~/openai/templ.py $1'